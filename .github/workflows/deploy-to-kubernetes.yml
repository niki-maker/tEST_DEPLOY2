name: Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kind and kubectl
        run: |
          curl -Lo kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
          chmod +x kind
          sudo install kind /usr/local/bin/
          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.23.0/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo install kubectl /usr/local/bin/

      - name: Create kind cluster
        run: |
          kind create cluster --name my-cluster
          kind get kubeconfig --name my-cluster > kubeconfig

      - name: Export kubeconfig environment variable
        run: |
          export KUBECONFIG=$PWD/kubeconfig

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/hello-python:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/hello-python:latest

      - name: Apply Kubernetes manifests
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Wait for pods to be ready (with retries)
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          RETRIES=10
          while [[ $RETRIES -gt 0 ]]; do
            kubectl get pods -l app=hello-python && break
            echo "Waiting for pods to be ready..."
            sleep 10
            RETRIES=$((RETRIES - 1))
          done
          if [[ $RETRIES -eq 0 ]]; then
            echo "Pods did not become ready in time"
            exit 1
          fi

      - name: Output pod logs (debugging)
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl logs -l app=hello-python  # Update this to your specific app label
